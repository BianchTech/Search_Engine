name: cpp-linter
on:
  pull_request:
    branches: [main, master, develop]
    paths: ['**.c', '**.cpp', '**.h', '**.hpp', '**.cxx', '**.hxx', '**.cc', '**.hh', '**CMakeLists.txt', 'meson.build', '**.cmake']
  push:
    branches: [main, master, develop]
    paths: ['**.c', '**.cpp', '**.h', '**.hpp', '**.cxx', '**.hxx', '**.cc', '**.hh', '**CMakeLists.txt', 'meson.build', '**.cmake']

permissions:
  contents: read

jobs:
  cpp-linter:
    runs-on: ubuntu-latest

    steps:
      # Faz o checkout do código
      - name: Checkout repository
        uses: actions/checkout@v3

      # Instala as ferramentas necessárias (clang-format e clang-tidy)
      - name: Install clang tools
        run: sudo apt-get update && sudo apt-get install -y clang-format clang-tidy

      # Verifica a formatação usando clang-format
      - name: Run clang-format
        run: |
          # Encontra todos os arquivos C++ e verifica o formato
          find . -regex '.*\.\(cpp\|hpp\|cxx\|hxx\|cc\|hh\|c\|h\)$' -exec clang-format --dry-run --Werror {} +
        shell: bash

      # Opcional: falha rápido se houver problemas no clang-format
      - name: Fail if formatting issues
        if: ${{ failure() }}
        run: exit 1
